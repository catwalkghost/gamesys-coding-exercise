package com.laddu.react_fragment;

import android.content.Context;
import android.content.DialogInterface;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;

import com.facebook.react.bridge.ReactContext;
import com.facebook.react.uimanager.RootView;
import com.facebook.react.views.view.ReactViewGroup;

import javax.annotation.Nullable;

public class ReactHalfCardView extends ViewGroup{

  private final ReactDialogFragmentModule mReactDialogFragmentModule;
  private Integer width;
  private Integer height;

  public void onDropInstance() {
    dismiss();
  }

  public interface OnRequestCloseListener {
    void onRequestClose(DialogInterface dialog);
  }

  private DialogRootViewGroup mHostView;
  private @Nullable DialogInterface.OnShowListener mOnShowListener;
  private @Nullable OnRequestCloseListener mOnRequestCloseListener;

  public ReactHalfCardView(Context context) {
    super(context);
    mHostView = new DialogRootViewGroup(context);
    mReactDialogFragmentModule = ((ReactContext) context).getNativeModule(ReactDialogFragmentModule.class);
  }

  @Override
  protected void onLayout(boolean changed, int l, int t, int r, int b) {
    // Do nothing as we are laid out by UIManager
  }

  @Override
  public void addView(View child, int index) {
    mHostView.addView(child, index);
  }

  @Override
  public int getChildCount() {
    return mHostView.getChildCount();
  }

  @Override
  public View getChildAt(int index) {
    return mHostView.getChildAt(index);
  }

  @Override
  public void removeView(View child) {
    mHostView.removeView(child);
  }

  @Override
  public void removeViewAt(int index) {
    View child = getChildAt(index);
    mHostView.removeView(child);
  }

  protected void setOnRequestCloseListener(OnRequestCloseListener listener) {
    mOnRequestCloseListener = listener;
  }

  protected void setOnShowListener(DialogInterface.OnShowListener listener) {
    mOnShowListener = listener;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  protected void show(){
      mReactDialogFragmentModule.show(mHostView);
  }

  protected void dismiss() {
    mReactDialogFragmentModule.dismiss();
  }

  static class DialogRootViewGroup extends ReactViewGroup implements RootView {

    public DialogRootViewGroup(Context context) {
      super(context);
    }

    @Override
    public boolean onInterceptTouchEvent(MotionEvent event) {
      return super.onInterceptTouchEvent(event);
    }

    @Override
    public boolean onTouchEvent(MotionEvent event) {
      super.onTouchEvent(event);
      return true;
    }

    @Override
    public void onChildStartedNativeGesture(MotionEvent androidEvent) {
    }

    @Override
    public void requestDisallowInterceptTouchEvent(boolean disallowIntercept) {
    }
  }
}
