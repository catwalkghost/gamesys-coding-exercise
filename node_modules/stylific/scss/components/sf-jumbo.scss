/**
 * Big-ass panel to display a greeting image. Text content is underlayed for
 * easier reading.
 *
 *   <div class="sf-jumbo" style="background-image: url(...)">
 *     ...
 *   </div>
 *
 * By default, jumbo content is pushed to the bottom. This can be changed with
 * a layout class:
 *
 *   <div class="sf-jumbo col-start-stretch" style="background-image: url(...)">
 *     ...
 *   </div>
 *
 * In this example, children will be at the top.
 */

.sf-jumbo {

  /**
   * Layout.
   */
  // Required to automatically take up full space in some flex containers where
  // child flex basis is `auto` by default.
  width: 100%;
  // By default, height is measured in em units. Adjusting the jumbo font-size
  // adjusts its height. If the user sets $sf-jumbo-height to a different unit
  // (e.g. rem), they'll need to adjust jumbo height manually.
  height: $sf-jumbo-height;
  font-size: $sf-jumbo-font-size;

  // Normal sized version.
  &.sf-jumbo-normal {font-size: 1em}

  /**
   * Inner layout.
   */
  display: flex;
  flex-direction: column;
  // Push children to bottom.
  justify-content: flex-end;

  // Background image styles.
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;

  /**
   * Colours. Unlike with many other elements, we don't derive jumbo colours
   * from base variables. Instead, we hardcode it to always have a dark
   * background and a light text with a dark underlay. The reason is that a
   * jumbo is used as a banner for images, and images don't load instantly.
   * The default background is displayed first. A light background creates a
   * more noticeable flicker effect, regardless of the overall theme of the
   * site. So a jumbo must remain dark.
   */
  $text-color: darken(white, 1%);
  $bg-color: $sf-color-umbra;
  background-color: $bg-color;
  color: $text-color;
  * {color: inherit}

  /**
   * Immediate child styling.
   */
  > * {
    // Underlay.
    background-color: rgba(sf-contrasting-color($text-color), 0.4);

    // Whitespace.
    padding: $sf-space;
    &:not(:first-child) {padding-top: 0}
  }
}
