/**
 * The site footer. When the page is short, it's automatically pushed to the
 * bottom of the viewport. When there's enough content on the page, the footer
 * is pushed further down and is spaced out from that content by a configurable
 * margin.
 *
 * The footer styling is defined with the expectation that it's the last
 * visible child of the document body. The document needs to look like this:
 *
 *   <body>
 *     <div class="sf-navbar">...</div>
 *
 *     <div>...</div>
 *
 *     <div class="sf-footer">
 *       <div class="sf-footer-body">
 *         ...
 *       </div>
 *     </div>
 *   </body>
 *
 * The footer content must be inside the .sf-footer-body.
 *
 * The footer styling relies on the body being a flex container with
 * {flex-direction: column}, which is the global default defined in layout.scss.
 */

.sf-footer {

  /**
   * Layout.
   */
  display: block;
  // Take up all available width.
  width: 100%;
  // Push the footer all the way down to the bottom of the body. This requires
  // the body to be a column flex container, which is the default defined in
  // `layout.scss`.
  margin-top: auto;
  // Prevent .space-out and analogs from adding an extra margin to the footer.
  // It's the last visible element on the page, after all.
  &, &:not(:last-child) {
    margin-bottom: 0;
  }

  /**
   * Footer body styling.
   */
  @at-root .sf-footer-body {
    /**
     * Layout.
     */
    // Take up all available width.
    width: 100%;
    // Set the minimum height.
    min-height: $sf-footer-height;
    // Additional preceding margin.
    margin-top: $sf-footer-offset;

    /**
     * Inner layout.
     */
    display: flex;
    align-items: center;
    justify-content: space-between;

    // Cosmetic.
    padding: $sf-space;
    background-color: inherit;
  }
}
